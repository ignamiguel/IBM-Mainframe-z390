TPIBM    SUBENTRY BASES=(3,4)         
         WTO   '=========>    INICIO    <========='         
         
		 BAL   5,INICIAR
MENU	 BAL   5,IMPRME_M
         WTOR  'Seleccionar opcion [1-9]',OPCION,,WAITECB
		 WAIT  ECB=WAITECB 
         CLC   OPCION,=C'1'
		 BE    INGRESAR
		 CLC   OPCION,=C'2'
		 BE    MOSTRAR
		 CLC   OPCION,=C'3'
		 BE    SUMAR
		 CLC   OPCION,=C'4'
		 BE    ORDENASC
		 CLC   OPCION,=C'5'
		 BE    ORDENDES
		 CLC   OPCION,=C'6'
		 BE    EX_DECIM
		 CLC   OPCION,=C'7'
		 BE    EX_FRACC
		 CLC   OPCION,=C'8'
		 BE    ELIMINAR
		 CLC   OPCION,=C'9'
		 BE    FIN
		 
FIN      WTO   '=========>    FIN    <========='  
         SUBEXIT

*************************************
*******   INICIAR VARIABLES   *******
*************************************
INICIAR  LA    6,MAT
         LA    9,20
INITMAT  MVC   0(3,6),=X'00000F'
         LA    6,3(6)
         BCT   9,INITMAT
*;****************************
*; CARGO VALORES DE PRUEBA  **
*;****************************
         LA    6,MAT
         MVC   0(3,6),=X'09999F'
         MVC   3(3,6),=X'09998F'
		 
         MVC   6(3,6),=X'09997F'
         MVC   9(3,6),=X'09996F'
		 
		 MVC   12(3,6),=X'09995F'
         MVC   15(3,6),=X'09994F'
		 
         MVC   18(3,6),=X'09993F'
         MVC   21(3,6),=X'09992F'
		 
		 MVC   24(3,6),=X'00009D'
         MVC   27(3,6),=X'00008F'
		 
         MVC   30(3,6),=X'00007D'
         MVC   33(3,6),=X'00006F'
		 
		 MVC   36(3,6),=X'00005D'
         MVC   39(3,6),=X'00004F'
		 
         MVC   42(3,6),=X'00093D'
         MVC   45(3,6),=X'00002F'
		 
		 MVC   48(3,6),=X'00099D'
         MVC   51(3,6),=X'00008F'
		 
         MVC   54(3,6),=X'00097D'
         MVC   57(3,6),=X'00006F'
         
		 BR    5

************************************
*******         MENU         *******
************************************
IMPRME_M WTO   '---------------------------------'
         WTO   '---------      MENU     ---------'
         WTO   '---------------------------------'
         WTO   '[1] Ingresar fraccion'
         WTO   '[2] Ver fracciones ingresadas'
         WTO   '[3] Sumar todas las fracciones'
         WTO   '[4] Ordenar ASC'
         WTO   '[5] Ordenar DESC'			 
         WTO   '[6] Calcular expresion decimal'	
         WTO   '[7] Forma fraccionaria de un nro periodico'	
         WTO   '[8] Eliminar fraccion'			 
         WTO   '[9] Salir'		 
		 BR    5
		 
*************************************
*******   INGRESAR FRACCION   *******
*************************************
INGRESAR LA    6,MAT
         WTOR  'Seleccionar posicion arreglo [0-9]',ORDEN,,WAITECB
		 WAIT  ECB=WAITECB 
		 CLC   ORDEN,=C'0'
		 BL    INVORDEN
		 CLC   ORDEN,=C'9'
		 BH    INVORDEN

		 PACK  ORDENPCK,ORDEN
		 CVB   9,ORDENPCK
		 LA    8,0
		 
		 M     8,=F'6'
		 AR    6,9
		 
		 LA    7,0
SIGNO_F  WTOR  'Ingresar signo (+ o -)',SIGNO,,WAITECB
		 WAIT  ECB=WAITECB
		 CLC   SIGNO,=C'+'
		 BE    NUM_F
		 CLC   SIGNO,=C'-'
		 BE    NEGATIVA
		 WTO   'Signo Invalido!'
		 B     SIGNO_F

NEGATIVA LA    7,1 
		 
NUM_F	 WTOR  'Ingresar el numerador (4 DIGITOS)',NUMRDOR,,WAITECB
         WAIT  ECB=WAITECB

		 LA     10,NUMRDOR
         BAL    5,VAL_ING
		 CLC    NUMRDOR,=X'F0F0F0F0'
		 BE     INV_NUM

		 WTOR  'Ingresar el denominador (4 DIGITOS)',DENMDOR,,WAITECB
		 WAIT  ECB=WAITECB
		 
		 LA     10,DENMDOR
         BAL    5,VAL_ING
		 CLC    DENMDOR,=X'F0F0F0F0'
		 BE     INV_NUM		 
		 
*; EMPAQUETO *
		 PACK  AUXNUM1,NUMRDOR
		 PACK  AUXNUM2,DENMDOR		 
		 
		 LA    8,0
		 CR    7,8
		 BE    POSITIVA		 
         MVN   AUXNUM1+2(1),=X'DD'
		 
POSITIVA MVC   0(3,6),AUXNUM1	 
         MVC   3(3,6),AUXNUM2
         B     MENU
		 
*;****************************
*; MENSAJE DE ERROR AUXILIAR *
*;****************************
INVORDEN WTO   'Posicion invalida!'
         B     INGRESAR

VAL_ING  LA    11,4
VAL_ING2 CLC   0(1,10),=X'F0'
         BL    INV_CAR
		 CLC   0(1,10),=X'F9'
		 BH    INV_CAR
		 A     10,=F'1'
		 BCT   11,VAL_ING2
		 BR    5

INV_CAR  WTO   'Caracter invalido!'
         B     NUM_F
		 
INV_NUM	 WTO   'No puden ser todos ceros!'
         B     NUM_F
		 
****************************
*******   ELIMINAR   ******* 
****************************		 
ELIMINAR LA    6,MAT
ELI_POS  WTOR  'Seleccionar posicion arreglo [0-9]',ORDEN,,WAITECB
		 WAIT  ECB=WAITECB
		 CLC   ORDEN,=C'0'
		 BL    ELI_ERR
		 CLC   ORDEN,=C'9'
		 BH    ELI_ERR		 
		 
		 PACK  ORDENPCK,ORDEN
		 CVB   9,ORDENPCK
		 LA    8,0
		 
		 M     8,=F'6'
		 AR    6,9
		 
		 ZAP   0(3,6),=P'0'
		 ZAP   3(3,6),=P'0'
		 
		 B     MENU		 
*;*********************
*; MENSAJE DE ERROR   *
*;*********************
ELI_ERR  WTO   'Posicion invalida!'
         B     ELI_POS

***************************
*******   MOSTRAR   ******* 
***************************
MOSTRAR  LA    6,MAT
         ZAP   ORDENPCK,=P'0'
         
         LA    7,10
         LA    9,6
IMPRME_F MVC   AUXNUM1,0(6)
		 MVC   AUXNUM2,3(6)
		 
		 CP    AUXNUM1,=P'0'
		 BE    NO_MOST
		 
		 UNPK  NUMRDOR,AUXNUM1
		 UNPK  DENMDOR,AUXNUM2
 
         MVC   SIGNO,=C' '
		 CP    AUXNUM1,=P'0'
		 BH    SIN_SIGN
		 BE    SIN_SIGN
         MVC   SIGNO,=C'-'
	     MVZ   NUMRDOR+3(1),=X'FF'
		 
SIN_SIGN UNPK  ORDEN,ORDENPCK
         MVZ   ORDEN(1),=X'FF' 
         MVC   FRAC+9(1),ORDEN
         MVC   FRAC+12(1),SIGNO
         MVC   FRAC+13(4),NUMRDOR
         MVC   FRAC+17(1),=C'/'
         MVC   FRAC+18(4),DENMDOR
		 WTO   MF=(E,FRAC-4)

NO_MOST  AP    ORDENPCK,=P'1'
		 AR    6,9
		 BCT   7,IMPRME_F
		 
		 B     MENU
*************************************
*******    SUMAR FRACCIONES   ******* 
*************************************
SUMAR    LA    6,MAT
         LA    7,10

*; INICIALIZO El RES_NUM EN 0 Y RES_DEN EN 1
*; ELEMENTO NEUTRO PARA LA SUMA  
         ZAP   RES_NUM,=P'0'
         ZAP   RES_DEN,=P'1'
    
*; ME GUARDO EL RES_DEN ANTERIOR
ITER_SUM ZAP   RES_AUX,RES_DEN
		 
*; SI EL DEN = 0, NO LO SUMO 
         CP    3(3,6),=P'0'
		 BE    INCR_MAT
		 
*; MULTIPLICO RES_DEN X EL DEN DE LA FRACCION		 
		 MP    RES_DEN,3(3,6)

*; MULTIPLICO RES_AUX X EL NUM DE LA FRACCION		 
		 MP    RES_AUX,0(3,6)

*; MULTIPLICO RES_NUM X EL DEN DE LA FRACCION		 
		 MP    RES_NUM,3(3,6)

*; SUMO RES_NUM + RES_AUX (ESTO PUEDE DAR CERO)	 
		 AP    RES_NUM,RES_AUX
		 
		 CP    RES_NUM,=P'0'
		 BNE   VAL_OF

*; SI ES CERO, RESETEO EL RES_DEN		 
		 ZAP   RES_DEN,=P'1'
		 B     INCR_MAT

*; VERIFICO SI OVERFLOW *		 
VAL_OF	 CLC   RES_NUM(8),=X'0000000000000000'
		 BNE   OVER_NUM		 
		 
		 CLC   RES_DEN(8),=X'0000000000000000'
		 BNE   OVER_DEN		
		 
*;****************************
*; PROCESO DE SIMPLIFICACION *
*;****************************         
*; CALCULO EL MAXIMO COMUN DIVISOR *
         ZAP   AUXNUM5,RES_NUM
		 ZAP   AUXNUM6,RES_DEN
		 
		 BAL   14,CAL_MCD
		 
*; SIMPLIFICO SI MCD != 1*		 
		 ZAP   DVISOR2,OPERAN2
         CP    DVISOR2,=P'1'
		 BE    INCR_MAT
		 
		 LA    8,DVDEN2
		 ZAP   DVDEN2,RES_NUM
         DP    DVDEN2,DVISOR2
         ZAP   RES_NUM,0(8,8)

		 ZAP   DVDEN2,RES_DEN
         DP    DVDEN2,DVISOR2
         ZAP   RES_DEN,0(8,8)
		 
*; INCREMENTO EL REGISTRO APUNTANDO A MATRIX 
INCR_MAT A     6,=F'6' 		 
		 BCT   7,ITER_SUM
    		 
*;***************************
*;   MUESTRO EL RESULTADO  **
*;***************************
         MVC   RE_SUMA(35),=C'                                        ' 
		 MVC   RE_SUMA+0(3),=C'=: '
		 
*; PREGUNTO EL SIGNO 
         MVC   SIGNO,=C' '
		 CP    RES_NUM,=P'0'
         BH    TOT_POS		 
		 BE    TOT_POS
		 MVC   SIGNO,=C'-'
		 
TOT_POS	 MVC   RE_SUMA+3(1),SIGNO

         UNPK  RESU3,RES_NUM
		 MVZ   RESU3+14(1),=X'FF'         
		 MVC   RE_SUMA+4(15),RESU3
		 
		 MVC   RE_SUMA+19(1),=C'/'
		 
		 UNPK  RESU3,RES_DEN
		 MVZ   RESU3+14(1),=X'FF'
		 MVC   RE_SUMA+20(15),RESU3
		 
		 WTO   MF=(E,RE_SUMA-4)
		 
		 B     MENU	 

*;**************************************
*;***     MENSAJES DE OVERFLOW       ***
*;**************************************
OVER_NUM WTO   'OVERFLOW Numerador'
         B     MENU		 

OVER_DEN WTO   'OVERFLOW Denominador'
         B     MENU	
		 
*******************************************
*******   MAXIMO COMUN DIVISOR      ******* 
*******************************************
*; MCD(A,B) UTILIZA COMO PARAMETRO LAS VARIABLES *
*; AUXNUM5 Y AUXNUM6                             *
*; DEVUELVE EL RESULTADO EN OPERAN2              *

CAL_MCD  LA    8,DVDEN2
   
*; AJUSTO EL SIGNO DE AUXNUM5
		 CP    AUXNUM5,=P'0'
		 BH    AJUSTE2
          
		 MP    AUXNUM5,=P'-1'

*; AJUSTO EL SIGNO DE AUXNUM6		 
AJUSTE2	 CP    AUXNUM6,=P'0'
		 BH    OPERAR
		 
		 MP   AUXNUM6,=P'-1'     		 
 
*; PREGUNTO SI A > B   
OPERAR   CP    AUXNUM5,AUXNUM6
		 BL    INVERTIR	 
		 
		 ZAP   DVDEN2,AUXNUM5
		 ZAP   DVISOR2,AUXNUM6
		 B     REDUCIR
		 
INVERTIR ZAP   DVDEN2,AUXNUM6
		 ZAP   DVISOR2,AUXNUM5 
		 
*; DIVIDO                        		 
REDUCIR  DP    DVDEN2,DVISOR2
		 CP    8(8,8),=P'0'
		 BE    DEVOLVER
		 
*; ACTUALIZO LOS VALORES         
		 ZAP   DIVAUX2,DVISOR2
		 ZAP   DVISOR2,8(8,8)
		 ZAP   DVDEN2,DIVAUX2
         
		 B     REDUCIR

*; DEVUELVO EL MCD 	 
DEVOLVER ZAP   OPERAN2,DVISOR2

         MVC   RE_SUMA(35),=C'                                        ' 
		 
*; IMPRIMO EL MCD ALOJADO EN OPERAN2 
*;		 UNPK  RESU2,OPERAN2
*;       MVZ   RESU2+15(1),=X'FF'		 
         
*;		 MVC   RE_SUMA+1(16),RESU2
		 
*;		 WTO   MF=(E,RE_SUMA-4)

         BR    14
**************************************
*******   ORDENAR FRACCIONES   ******* 
**************************************
ORDENASC ZAP   ORDN_ASC,=P'1'
         B     ORDENAR
ORDENDES ZAP   ORDN_ASC,=P'0'         
ORDENAR  MVC   A_INDICE(10),A_AUX
         LA 10,9
*; ITERAR TODAS LAS POSICIONES *
VUELTA_B LA    8,A_INDICE
         LA    7,9
*; METODO DEL BURBUJEO  *
BURBUJA  LA    6,MAT
         ZAP   EMP_INDI,0(1,8)
		 MP    EMP_INDI,=P'6'
		 CVB   9,EMP_INDI
		 
		 AR    6,9
		 
		 ZAP   AUXNUM1,0(3,6)
		 ZAP   AUXNUM2,3(3,6)
		 
		 A     8,=F'1'
		 LA    6,MAT
		 
		 ZAP   EMP_INDI,0(1,8)
		 MP    EMP_INDI,=P'6'
		 CVB   9,EMP_INDI
		 
		 AR    6,9
		 
		 ZAP   AUXNUM3,0(3,6)
		 ZAP   AUXNUM4,3(3,6)

*;***********************
*;       COMPARAR      **
*;***********************
		 ZAP  OPERAN1,AUXNUM1
		 MP   OPERAN1,AUXNUM4
		 
		 ZAP  OPERAN2,AUXNUM3
		 MP   OPERAN2,AUXNUM2	 
*;***********************
*;   ORDEN ASC O DESC  **
*;***********************
         CP   ORDN_ASC,=P'1'
		 BE   OR_ASC
		 
OR_DESC	 CP   OPERAN2,OPERAN1
         BE   NEXT
		 BL   NEXT
		 BH   SWAPPING
		 
OR_ASC	 CP   OPERAN1,OPERAN2
		 BE   NEXT
		 BL   NEXT
		 BH   SWAPPING	          

*;************************
*;      SWAPPING        **
*;************************
SWAPPING ZAP   AUX,0(1,8)
		 S     8,=F'1'
		 ZAP   AUX2,0(1,8)
		 
		 ZAP   0(1,8),AUX
		 A     8,=F'1'
		 ZAP   0(1,8),AUX2	 
         		 
NEXT     BCT   7,BURBUJA
         BCT   10,VUELTA_B
*;****************************
*;      MUESTRO ORDENADO    **
*;****************************	 
		 LA    8,A_INDICE
         LA    7,10		 
IMPRME_2 LA    6,MAT		 
*; RESUELVO EL OFFSET *
         
		 ZAP   EMP_INDI,=P'6'
		 MP    EMP_INDI,0(1,8)
         CVB   9,EMP_INDI         
         AR    6,9
		 
         MVC   AUXNUM1,0(6)
		 MVC   AUXNUM2,3(6)
		 
		 CP    AUXNUM1,=P'0'
		 BE    N_MOST2
		 
		 UNPK  NUMRDOR,AUXNUM1
		 UNPK  DENMDOR,AUXNUM2
 
         MVC   SIGNO,=C' '
		 CP    AUXNUM1,=P'0'
		 BH    S_SIGN2
		 BE    S_SIGN2
         MVC   SIGNO,=C'-'
	     MVZ   NUMRDOR+3(1),=X'FF'
		 
		 ZAP   ORDENPCK,0(1,8)
		 
S_SIGN2  ZAP   ORDENPCK,0(1,8)
         UNPK  ORDEN,ORDENPCK
         MVZ   ORDEN(1),=X'FF' 
         MVC   FRAC+9(1),ORDEN
         MVC   FRAC+12(1),SIGNO
         MVC   FRAC+13(4),NUMRDOR
         MVC   FRAC+17(1),=C'/'
         MVC   FRAC+18(4),DENMDOR
		 WTO   MF=(E,FRAC-4)

N_MOST2  A     8,=F'1'
         BCT   7,IMPRME_2
		 
		 B     MENU
**************************************
*******   EXPRESION DECIMAL    ******* 
**************************************
EX_DECIM LA    6,MAT
         ZAP   ORDENPCK,=P'0'
		 
		 LA    8,10
		 
EJE_CALC LA    10,RE_SUMA
		 LA    11,DCIMALES
		 LA    9,5
*; INICIALIZO RE_SUMA     *
		 MVC   RE_SUMA(35),=C'Fraccion X:                             '
		 
*; COPIO NUM A DIVIDENDO Y DEN A DIVISOR
		 ZAP   OPERAN1,0(3,6)
		 ZAP   DIVIDEND,0(3,6)
		 ZAP   DIVISOR,3(3,6)
         ZAP   AUXNUM1,=P'0'		 

         MVC   SIGNO,=C' '
*; SI EL NUM = 0, NO SE PROCESA *
         CP    OPERAN1,=P'0'
         BE    EJE_SIG 
*; OBTENGO EL SIGNO *         
         BH    DEC_COM
		 MVC   SIGNO,=C'-'
         MP    DIVIDEND,=P'-1'
     	 ZAP   OPERAN1,DIVIDEND
		 
*; COMPARO NUM Y DEN		 
DEC_COM	 CP    DIVIDEND,DIVISOR
		 BL    S_ENTERA
		 BH    C_ENTERA
		 BE    C_ENTERA

*; SIN PARTE ENTERA   *
S_ENTERA B     P_DECIML

*; CON PARTE ENTERA    *		 
C_ENTERA DP    DIVIDEND,DIVISOR
         LA    7,DIVIDEND   
		 ZAP   AUXNUM1,0(3,7)
		 ZAP   OPERAN1,3(3,7)
		 ZAP   DIVIDEND,OPERAN1
		 B     DEC_COM

*; PARTE DECIMAL - MULTIPLICO EL NUM X 10 *           
P_DECIML MP    OPERAN1,=P'10'
         ZAP   DIVIDEND,OPERAN1
		 
*; VUELVO A COMPARAR *
		 CP    DIVIDEND,DIVISOR
		 BE    EJE_DIV
		 BH    EJE_DIV		 
		 
		 MVC   0(1,11),=C'0'
		 A     11,=F'1'
		 B     EJE_AJST
		 
EJE_DIV	 DP    DIVIDEND,DIVISOR
         LA    7,DIVIDEND   

*; GUARDO EL RESTO *		 
		 ZAP   OPERAN1,3(3,7)

*; OBTENGO EL COCIENTE *		 
		 UNPK  RESULT,0(3,7)
		 MVZ   RESULT+6(1),=X'FF'
		 MVC   0(1,11),RESULT+6
		 A     11,=F'1'
		 
		 ZAP   DIVIDEND,OPERAN1
EJE_AJST BCT   9,P_DECIML

*; IMPRIMO POR PANTALLA 		 
*; CONVIERTO A CARACTER LA PARTE ENTERA *		     
		 UNPK  ORDEN,ORDENPCK
         MVZ   ORDEN(1),=X'FF' 
		 UNPK  ENTEROS,AUXNUM1
		 MVZ   ENTEROS+7(1),=X'FF'
		 
*; COPIO EL SIGNO *
         MVC   RE_SUMA+9(1),ORDEN
		 MVC   RE_SUMA+12(1),SIGNO
		 MVC   RE_SUMA+13(4),ENTEROS+4
		 MVC   RE_SUMA+17(1),=C','
		 MVC   RE_SUMA+18(5),DCIMALES
*;		 MVC   RE_SUMA+11(9),=C'          ' 
		 
		 WTO   MF=(E,RE_SUMA-4)

*; PROCESO LA FRACCION SIGUIENTE *		 
EJE_SIG	 A     6,=F'6'
         AP    ORDENPCK,=P'1'
		 BCT   8,EJE_CALC
		 
		 B     MENU
		 
*******************************************
*******   EXPRESION FRACCIONARIA    ******* 
*******************************************
EX_FRACC WTOR  'Ingresar parte entera [4 DIGITOS]',NUMRDOR,,WAITECB
		 WAIT  ECB=WAITECB  
		 
		 PACK  AUXNUM1,NUMRDOR		 
		 
		 LA    7,DENMDOR
		 
		 WTOR  'Parte decimal periodica [4 DIGITOS]',DENMDOR,,WAITECB
		 WAIT  ECB=WAITECB  
		 
		 PACK  AUXNUM2,DENMDOR
		 
*; AJUSTO NUMERO INGRESADO PARA MOSTRAR *
*; PARTE ENTERA *
         MVC   RE_SUMA(35),=C'Numero ingresado:                      '
*		 MVC   RE_SUMA+18(1),=C' '
		 MVC   RE_SUMA+18(4),NUMRDOR
		 MVC   RE_SUMA+22(1),=C','

*; PARTE DECIMAL *
         LA    8,RE_SUMA
         A     8,=F'23'
		 LA    9,4
		 
*; NO COPIO LOS CEROS A LA IZQUIERDA *
*; DE LA PARTE DECIMAL *		 
EVAL_CR  CLC   0(1,7),=C'0'
		 BE    NO_COPIO
		 
*; SI EL CARACTER NO ES CERO, COPIO DESDE AHI
COPIAR_C MVC   0(1,8),0(7)
		 A     8,=F'1'
		 A     7,=F'1'
		 BCT   9,COPIAR_C		 
		 B     IMP_PERI
		 
NO_COPIO A     7,=F'1' 		 
		 BCT   9,EVAL_CR

*; IMPRIMO NUMERO INGRESADO 
IMP_PERI MVC   0(3,8),=C'...'
		 WTO   MF=(E,RE_SUMA-4)
         
*; EXPRESAR COMO FRACCION *
*; CUENTO LAS CIFRAS DECIMALES *
         CP    AUXNUM2,=P'1000'
		 BH    M_MIL  
		 BE    M_MIL
		 CP    AUXNUM2,=P'100'		 
		 BH    M_CIEN
		 BE	   M_CIEN
		 CP    AUXNUM2,=P'10'
		 BH    M_DIEZ
		 BE    M_DIEZ
		 CP    AUXNUM2,=P'1'
		 BH    M_UNO
		 BE    M_UNO

M_MIL    ZAP   RES_NUM,=P'10000'
         ZAP   RES_DEN,=P'9999'  
         B     EJE_MUL
M_CIEN   ZAP   RES_NUM,=P'1000'
         ZAP   RES_DEN,=P'999'
         B     EJE_MUL
M_DIEZ   ZAP   RES_NUM,=P'100'
         ZAP   RES_DEN,=P'99'
         B     EJE_MUL
M_UNO    ZAP   RES_NUM,=P'10'
         ZAP   RES_DEN,=P'9'

EJE_MUL  MP    RES_NUM,AUXNUM1
		 AP    RES_NUM,AUXNUM2
		 SP    RES_NUM,AUXNUM1

*;****************************
*; PROCESO DE SIMPLIFICACION *
*;****************************         
*; CALCULO EL MAXIMO COMUN DIVISOR *
         ZAP   AUXNUM5,RES_NUM
		 ZAP   AUXNUM6,RES_DEN
		 
		 BAL   14,CAL_MCD
		 
*; SIMPLIFICO SI MCD != 1*		 
		 ZAP   DVISOR2,OPERAN2
         CP    DVISOR2,=P'1'
		 BE    IMP_FRAC
		 
		 LA   8,DVDEN2
		 ZAP  DVDEN2,RES_NUM
         DP   DVDEN2,DVISOR2
         ZAP  RES_NUM,0(8,8)

		 ZAP  DVDEN2,RES_DEN
         DP   DVDEN2,DVISOR2
         ZAP  RES_DEN,0(8,8)

*; IMPRIMO RESULTADO 
*; PARTE ENTERA 
IMP_FRAC MVC   RE_SUMA(35),=C'Ex. fraccionaria:                     '
		 
		 UNPK  RESULT,RES_NUM
         MVZ   RESULT+6(1),=X'FF'		 
         
		 MVC   RE_SUMA+18(7),RESULT
		 MVC   RE_SUMA+25(1),=C'/'
		 
		 UNPK  RESULT,RES_DEN
         MVZ   RESULT+6(1),=X'FF'		 
         
		 MVC   RE_SUMA+26(7),RESULT

		 WTO   MF=(E,RE_SUMA-4)	 
		 
	     B     MENU	
		 
********************************************
*******   DECLARACION DE VARIABLES   *******
********************************************
OPCION   DS    CL1
ORDEN    DS    CL1
ORDENPCK DS    PL8

SIGNO    DS    CL1  
NUMRDOR  DS    CL4
DENMDOR  DS    CL4

         DC    H'26'
		 DC    H'0'
FRAC     DC    C'Fraccion X:           '

MAT      DS    20PL3

RES_NUM  DS    PL16
RES_DEN  DS    PL16
RES_AUX  DS    PL16

DIVIDEND DS    PL6
DIVISOR  DS    PL3
DIVAUX   DS    PL3

DVDEN2   DS    PL16
DVISOR2  DS    PL8
DIVAUX2  DS    PL8

         DC    H'11'
		 DC    H'0'
RESULT   DS    CL7

         DC    H'20'
		 DC    H'0'
RESU2    DS    CL16
   
         DC    H'19'
		 DC    H'0'
RESU3    DS    CL15
   
         DC    H'39'
		 DC    H'0'
RE_SUMA  DS    CL35

WAITECB  DC    F'0'

AUXNUM1  DS    PL3
AUXNUM2  DS    PL3
AUXNUM3  DS    PL3
AUXNUM4  DS    PL3

AUXNUM5  DS    PL8
AUXNUM6  DS    PL8
AUXNUM7  DS    PL8

A_INDICE DS    10P'0'
A_AUX    DC    X'0C1C2C3C4C5C6C7C8C9C'
EMP_L2   DC    P'00'
EMP_INDI DC    P'000000000000000'
AUX      DS    PL2
AUX2     DS    PL1

OPERAN1  DS    PL8
OPERAN2  DS    PL8

ORDN_ASC DS    PL1
COMA_FLG DS    PL1

DCIMALES DS    CL5
ENTEROS  DS    CL8


FACTNUM1 DS    PL70
FACTNUM2 DS    PL70

		 END
